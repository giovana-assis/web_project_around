!function(){"use strict";function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}function t(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,r(o.key),o)}}function r(t){var r=function(t,r){if("object"!=e(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!=e(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==e(r)?r:String(r)}var n=function(){function e(t,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._formSelector=r,this._inputSelector=t.inputSelector,this._inputName=t.inputName,this._inputElement=t.inputElement,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass}var r,n;return r=e,(n=[{key:"_showInputError",value:function(e,t,r){e.classList.add(this._inputErrorClass),t.textContent=r,t.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(e,t){e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}},{key:"_checkInputValidity",value:function(e){var t=this._formSelector.querySelector(".".concat(e.id,"-error"));e.validity.valid?this._hideInputError(e,t):this._showInputError(e,t,e.validationMessage)}},{key:"_hasInvalidInput",value:function(e){return e.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(e,t){this._hasInvalidInput(e)?t.classList.add("popup__save-disabled"):(t.classList.remove("popup__save-disabled"),t.removeAttribute("disabled"))}},{key:"_setEventListeners",value:function(){var e=this,t=Array.from(this._formSelector.querySelectorAll(this._inputSelector)),r=this._formSelector.querySelector(this._submitButtonSelector);t.forEach((function(n){n.addEventListener("input",(function(){e._checkInputValidity(n),e._toggleButtonState(t,r)}))}))}},{key:"enableValidation",value:function(){this._formSelector.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}}])&&t(r.prototype,n),Object.defineProperty(r,"prototype",{writable:!1}),e}(),o=n;function i(e){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},i(e)}function u(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,a(n.key),n)}}function a(e){var t=function(e,t){if("object"!=i(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!=i(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==i(t)?t:String(t)}var c=function(){function e(t,r,n,o){var i=t.name,u=t.link,a=t.likes,c=t._id,l=t.owner,s=n.handleCardClick,f=n.handleDeleteClick,p=n.handleLikeClick;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=i,this._link=u,this._likes=a,this._id=c,this._owner=l,this._cardId=o,this._cardTemplate=r,this._handleCardClick=s,this._handleDeleteClick=f,this._handleLikeClick=p}var t,r;return t=e,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardTemplate).content.querySelector(".card").cloneNode(!0)}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._setEventListeners(),this._element.querySelector(".card__image").src=this._link,this._element.querySelector(".card__image").alt=this._name,this._element.querySelector(".card__title").textContent=this._name,this._element.querySelector(".card__like-counter").textContent=this._likes.length,"94395b635080f2dd73235768"===this._owner._id&&this._element.querySelector(".card__delete").classList.remove("card__delete-hidden"),this.isLiked()&&this._element.querySelector(".card__heart").classList.add("card__heart-active"),this._element}},{key:"isLiked",value:function(){return this._likes.find((function(e){return"94395b635080f2dd73235768"===e._id}))}},{key:"_setEventListeners",value:function(){var e=this;this._element.querySelector(".card__image").addEventListener("click",(function(){e._handleCardClick(e._name,e._link)})),this._element.querySelector(".card__delete").addEventListener("click",(function(){e._handleDeleteClick()})),this._element.querySelector(".card__heart").addEventListener("click",(function(){e._likeCard()}))}},{key:"removeCard",value:function(){this._element.remove()}},{key:"_likeCard",value:function(){var e=this._element.querySelector(".card__heart").classList.contains("card__heart-active");this._handleLikeClick(e,this._id,this._element.querySelector(".card__like-counter")),this._element.querySelector(".card__heart").classList.toggle("card__heart-active")}}])&&u(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}(),l={inputName:".popup__name",inputSelector:".popup__input",submitButtonSelector:".popup__save",inactiveButtonClass:"popup__save-disabled",inputErrorClass:"popup__input_type-error",errorClass:"popup__input-error_active"};function s(e){return s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},s(e)}function f(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,p(n.key),n)}}function p(e){var t=function(e,t){if("object"!=s(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!=s(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==s(t)?t:String(t)}var y=function(){function e(t){var r,n,o,i=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r=this,o=function(e){"Escape"===e.key&&(i.close(),i._popup.querySelector(".popup__close"))},(n=p(n="_handleEscClose"))in r?Object.defineProperty(r,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):r[n]=o,this._popup=document.querySelector(t),this.close=this.close.bind(this)}var t,r;return t=e,(r=[{key:"open",value:function(){this._popup.classList.add("popup-visible"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup-visible"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var e=this,t=this._popup.querySelector(".popup__close"),r=this._popup.querySelector(".popup__wrapper");t.addEventListener("click",this.close),document.addEventListener("click",(function(t){t.target===r&&e.close()}))}}])&&f(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function d(e){return d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},d(e)}function b(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,h(n.key),n)}}function h(e){var t=function(e,t){if("object"!=d(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!=d(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==d(t)?t:String(t)}function v(e,t,r){return t=S(t),function(e,t){if(t&&("object"===d(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,m()?Reflect.construct(t,r||[],S(e).constructor):t.apply(e,r))}function m(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(m=function(){return!!e})()}function _(){return _="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=S(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},_.apply(this,arguments)}function S(e){return S=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},S(e)}function g(e,t){return g=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},g(e,t)}var w=function(e){function t(e){var r,n=e.submitCallback,o=e.popupSelector;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(r=v(this,t,[o]))._form=r._popup.querySelector(".popup__form"),r._submitCallback=n,r._button=r._popup.querySelector(".popup__save"),r.setEventListeners(),r}var r,n;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&g(e,t)}(t,e),r=t,(n=[{key:"_getInputValues",value:function(){var e=this._form.querySelectorAll(".popup__input"),t={};return e.forEach((function(e){t[e.name]=e.value})),t}},{key:"setEventListeners",value:function(){var e=this;_(S(t.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._submitCallback(e._getInputValues()),e.renderLoading(!0),e.close()}))}},{key:"close",value:function(){_(S(t.prototype),"close",this).call(this),this._form.reset()}},{key:"renderLoading",value:function(e){e?this._button.textContent="Salvando...":(this._button.setAttribute("disabled",""),this._button.classList.add("popup__save-disabled"),this._button.textContent="Salvar")}}])&&b(r.prototype,n),Object.defineProperty(r,"prototype",{writable:!1}),t}(y);function k(e){return k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},k(e)}function j(e,t,r){return t=L(t),function(e,t){if(t&&("object"===k(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return P(e)}(e,E()?Reflect.construct(t,r||[],L(e).constructor):t.apply(e,r))}function E(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(E=function(){return!!e})()}function P(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function O(e,t){return O=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},O(e,t)}function C(){return C="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=L(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},C.apply(this,arguments)}function L(e){return L=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},L(e)}function q(e){var t=function(e,t){if("object"!=k(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!=k(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==k(t)?t:String(t)}var T=function(e){function t(e){var r,n,o,i,u;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),o=P(n=j(this,t,[e])),u=function(e,o){C((r=P(n),L(t.prototype)),"open",r).call(r);var i=n._popup.querySelector(".popup__image"),u=n._popup.querySelector(".popup__place");i.src=o,u.alt=e,u.textContent=e},(i=q(i="open"))in o?Object.defineProperty(o,i,{value:u,enumerable:!0,configurable:!0,writable:!0}):o[i]=u,n.setEventListeners(),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&O(e,t)}(t,e),r=t,Object.defineProperty(r,"prototype",{writable:!1}),r;var r}(y);function I(e){return I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},I(e)}function R(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,U(n.key),n)}}function U(e){var t=function(e,t){if("object"!=I(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!=I(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==I(t)?t:String(t)}var B=function(){function e(t,r){var n,o,i,u=this,a=t.items,c=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),n=this,i=function(e){var t=u._renderer(e);u._container.prepend(t)},(o=U(o="addItem"))in n?Object.defineProperty(n,o,{value:i,enumerable:!0,configurable:!0,writable:!0}):n[o]=i,this._items=a,this._renderer=c,this._container=document.querySelector(r)}var t,r;return t=e,(r=[{key:"renderInitialCards",value:function(){this._items.forEach(this.addItem)}}])&&R(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function D(e){return D="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},D(e)}function x(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,A(n.key),n)}}function A(e){var t=function(e,t){if("object"!=D(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!=D(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==D(t)?t:String(t)}var V=function(){function e(t){var r=t.name,n=t.about,o=t.avatar,i=t.userId;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=document.querySelector(r),this._about=document.querySelector(n),this._avatar=document.querySelector(o),this._userId=i}var t,r;return t=e,(r=[{key:"getUserInfo",value:function(){return{name:this._name,about:this._about,avatar:this._avatar,userId:this._userId}}},{key:"setUserInfo",value:function(e,t){this._name.textContent=e,this._about.textContent=t}},{key:"setUserAvatar",value:function(e){this._avatar.src=e}}])&&x(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}(),N=document.querySelector(".add-button"),F=document.querySelector(".edit-button"),J=(document.querySelector(".popup__name"),document.querySelector(".popup__detail"),document.forms.form_profile),z=document.forms.form__card,H=document.querySelector(".profile__button "),M=document.forms.form_avatar;function G(e){return G="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},G(e)}function K(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,Q(n.key),n)}}function Q(e){var t=function(e,t){if("object"!=G(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!=G(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==G(t)?t:String(t)}var W=function(){function e(t){var r=t.baseURL,n=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseURL=r,this._headers=n}var t,r;return t=e,(r=[{key:"getInitialCards",value:function(){return fetch("".concat(this._baseURL,"/cards"),{headers:{authorization:"c33edda4-44b3-4b31-9ef9-67d7dfcdfd71"}}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"createCard",value:function(e){return fetch("".concat(this._baseURL,"/cards"),{headers:this._headers,method:"POST",body:JSON.stringify(e)}).then((function(e){return e.json()}))}},{key:"getUserProfile",value:function(){return fetch("".concat(this._baseURL,"/users/me"),{headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).catch((function(e){console.log(e)}))}},{key:"setUserProfile",value:function(e){var t=e.name,r=e.about;return fetch("".concat(this._baseURL,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).catch((function(e){console.log(e)}))}},{key:"deleteCard",value:function(e){return fetch("".concat(this._baseURL,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"updateLike",value:function(e,t){return e?fetch("".concat(this._baseURL,"/cards/likes/").concat(t),{method:"DELETE",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).catch((function(e){console.log(e)})):fetch("".concat(this._baseURL,"/cards/likes/").concat(t),{method:"PUT",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).catch((function(e){console.log(e)}))}},{key:"setUserAvatar",value:function(e){return fetch("".concat(this._baseURL,"/users/me/avatar"),{headers:this._headers,method:"PATCH",body:JSON.stringify({avatar:e})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).catch((function(e){console.log(e)}))}}])&&K(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function X(e){return X="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},X(e)}function Y(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,Z(n.key),n)}}function Z(e){var t=function(e,t){if("object"!=X(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!=X(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==X(t)?t:String(t)}function $(e,t,r){return t=re(t),function(e,t){if(t&&("object"===X(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,ee()?Reflect.construct(t,r||[],re(e).constructor):t.apply(e,r))}function ee(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(ee=function(){return!!e})()}function te(){return te="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=re(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},te.apply(this,arguments)}function re(e){return re=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},re(e)}function ne(e,t){return ne=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},ne(e,t)}var oe=function(e){function t(e){var r,n=e.popupSelector,o=e.handleFormSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(r=$(this,t,[n]))._popup=document.querySelector(n),r._form=r._popup.querySelector(".popup__form"),r._handleFormSubmit=o,r}var r,n;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&ne(e,t)}(t,e),r=t,(n=[{key:"open",value:function(e){this._card=e,te(re(t.prototype),"open",this).call(this)}},{key:"setEventListeners",value:function(){var e=this;te(re(t.prototype),"setEventListeners",this).call(this),this._popup.querySelector(".popup__save_delete").addEventListener("click",(function(t){t.preventDefault(),e._handleFormSubmit(e._card).then((function(){e.close()}))}))}}])&&Y(r.prototype,n),Object.defineProperty(r,"prototype",{writable:!1}),t}(y),ie=new W({baseURL:"https://around.nomoreparties.co/v1/web_ptbr_08",headers:{authorization:"c33edda4-44b3-4b31-9ef9-67d7dfcdfd71","Content-Type":"application/json"}}),ue=new T("#popup-photo"),ae=new V({name:".profile__name",about:".profile__about",avatar:".profile__picture"});ie.getUserProfile().then((function(e){var t=e.name,r=e.about,n=e.avatar;ae.setUserInfo(t,r),ae.setUserAvatar(n)})).catch((function(e){console.log(e)})),ie.getInitialCards().then((function(e){var t=new B({items:e,renderer:function(e){var t=new c(e,"#template",{handleCardClick:function(){ue.open(e.name,e.link)},handleDeleteClick:function(){var e=new oe({popupSelector:".popup-delete",handleFormSubmit:function(e){return ie.deleteCard(e._id).then((function(){t.removeCard()})).catch((function(e){console.log(e)}))}});e.open(t),e.setEventListeners()},handleLikeClick:function(e,r,n){ie.updateLike(e,t._id).then((function(e){n.textContent=e.likes.length}))}});return t.generateCard()}},".cards-container");t.renderInitialCards();var r=new w({submitCallback:function(e){ie.createCard(e).then((function(e){t.addItem(e)})).finally((function(){return r.renderLoading(!1)}))},popupSelector:".popup-card"});N.addEventListener("click",(function(){r.open()}))})).catch((function(e){console.log(e)}));var ce=new w({submitCallback:function(e){var t=e.avatar;ie.setUserAvatar(t).then((function(){ae.setUserAvatar(t),ce.close()})).finally((function(){return ce.renderLoading(!1)}))},popupSelector:".popup-avatar"});H.addEventListener("click",(function(){ce.open()}));var le=new w({submitCallback:function(e){var t=e.name,r=e.about;ie.setUserProfile({name:t,about:r}).then((function(){ae.setUserInfo(t,r)})).finally((function(){return le.renderLoading(!1)}))},popupSelector:".popup-profile"});F.addEventListener("click",(function(){var e=ae.getUserInfo();e.name,e.about,le.open()}));var se=new o(l,J),fe=new o(l,z),pe=new o(l,M);se.enableValidation(),fe.enableValidation(),pe.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,